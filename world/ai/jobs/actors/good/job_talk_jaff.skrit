/*
  ============================================================================
  ----------------------------------------------------------------------------

	File		: 	job_talk_jaff.skrit

	Author(s)	: 	Bartosz Kijanka / Anu

	Purpose		: 	Make Jaff (a8 NPC) talk goodly

	(C)opyright 2000 Gas Powered Games, Inc.

  ----------------------------------------------------------------------------
  ============================================================================
*/

Go			m_Go$;
GoMind		m_Mind$;
GoBody  	m_Body$;
Job			m_Job$;
Goid		m_Target$;

#include "k_job_c_mcp_fidget_utils"
#include "k_job_c_talk_utils"

startup state STARTUP$
{
}

////////////////////////////////////////////////////////////////////////////////
//	init
event OnJobInitPointers$( Job job$ )
{
	m_Job$		= job$;
	m_Go$		= job$.Go;
	m_Mind$		= job$.Go.Mind;
	m_Body$		= job$.Go.Body;
}


event OnJobInit$( Job job$ )
{
	OnJobInitPointers$( job$ );

	m_Target$	= job$.GoalObject;

	SetState Face$;
}

////////////////////////////////////////////////////////////////////////////////
//	face the audience
state Face$
{
	transition
	{
		-> Talk$:	OnWorldMessage( WE_MCP_FACING_LOCKEDON );
	}

	event OnEnterState$
	{
		if( !m_Go$.HasConversation )
		{
			report.errorf( "Actor '%s', scid:0x%08x was told to run job_talk but he doesn't have a conversation component.",
							m_Go$.GetTemplateName,
							m_Go$.Goid );
			SetState Exiting$;
		}
		MCPManager.MakeRequest( m_Go$.Goid, PL_FACE, m_Target$ );
	}
}


////////////////////////////////////////////////////////////////////////////////
//	blab blab away... pretend you're Lee
state Talk$
{
	transition
	{
		-> Exiting$:	OnWorldMessage( WE_REQ_TALK_END ) =
		{
			if( m_Go$.Mind.ActorAutoFidgets )
			{
				StartFidgetIfRequired$();
			}
		}
	}
	
	trigger OnWorldMessage$( WE_ANIM_DONE )
	{
		TryAnim$('talk');
	}

	event OnEnterState$
	{
	#only( game )
	[[
		// Have we finished the letter quest?
		if ( Victory.IsQuestCompleted( "a5_letter", m_Target$ ) )
		{
			// give the After the letter dialogue
			m_Go$.GetConversation.RSSelectConversation( "jaff_after_a5_letter" );  
			TryAnim$('talk');			
		}	
		// if they have NIRR'S LETTER, pick the right conversation
		else if ( Goid.InvalidGoid != UIPartyManager.DoesActivePartyHaveTemplate( "book_glb_lore_nirr", m_Target$ ) )
		{
			m_Go$.GetConversation.RSSelectConversation( "jaff_during_a5_letter" );  
			TryAnim$('talk');
		}	
		else
		{
			m_Go$.GetConversation.RSSelectConversation( "jaff_during_a5_letter_no_letter" );
			TryAnim$('talk');
		}
		m_Go$.GetConversation.RSActivateDialogue();
	]]
	}
}


////////////////////////////////////////////////////////////////////////////////
//	finish blabbing
state Exiting$
{
	event OnEnterState$
	{
		// $$$ close up any dialogs here...

		// Send a PL_FACE reguest without a target so that they no longer
		// continue to face the character they were talking to
		MCPManager.MakeRequest( m_Go$.Goid, PL_FACE );

		m_Job$.MarkForDeletion();
	}
}


