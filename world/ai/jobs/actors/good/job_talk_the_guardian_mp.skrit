/*
  ============================================================================
  ----------------------------------------------------------------------------

	File		: 	job_talk_the_guardian_mp.skrit

	Author(s)	: 	Jason Dunlop

	Purpose		: 	the guardian speaks his last words.

	(C)opyright 2003 Mad Doc Software, LLC

  ----------------------------------------------------------------------------
  ============================================================================
*/

Go		m_Go$;
GoMind	m_Mind$;
GoBody  m_Body$;
Job		m_Job$;


#include "k_job_c_mcp_fidget_utils"
#include "k_job_c_talk_utils"

startup state STARTUP$
{
}

////////////////////////////////////////////////////////////////////////////////
//	init
event OnJobInitPointers$( Job job$ )
{
	m_Job$		= job$;
	m_Go$		= job$.Go;
	m_Mind$		= job$.Go.Mind;
	m_Body$		= job$.Go.Body;
}

event OnJobInit$( Job job$ )
{
	OnJobInitPointers$( job$ );

	SetState Talk$;
}

////////////////////////////////////////
//	Main State Machine

state Talk$
{
	transition
	{
		-> Exiting$:	OnWorldMessage( WE_REQ_TALK_END );
	}

	event OnEnterState$
	{
		// $$$ read/write variables from the Game Auditor here, and bring up the appropriate dialogs...
		MCPManager.Flush(m_Go$.Goid);
		
		if( GameAuditor.GetDb.GetBool("a5_guardian_complete") )
		{
			m_Go$.GetConversation.RSSelectConversation( "guardian_hello_death_qc" );
			TryAnim$('talk');
		}
		else
		{
			m_Go$.GetConversation.RSSelectConversation( "guardian_hello_death" );
			TryAnim$('talk');
		}

		m_Go$.GetConversation.RSActivateDialogue();
	}
}


////////////////////////////////////////////////////////////////////////////////
//	finish blabbing
state Exiting$
{
	event OnEnterState$
	{
		// $$$ close up any dialogs here...

		// Send a PL_FACE reguest without a target so that they no longer
		// continue to face the character they were talking to
		MCPManager.MakeRequest( m_Go$.Goid, PL_FACE );

		m_Job$.MarkForDeletion();
	}
}



